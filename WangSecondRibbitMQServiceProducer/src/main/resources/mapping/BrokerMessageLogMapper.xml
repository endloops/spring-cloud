<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="sxs.xas.bqq.hqz.yjgc.myw.entity.mapper.BrokerMessageLogMapper">
  <resultMap id="BaseResultMap" type="sxs.xas.bqq.hqz.yjgc.myw.entity.model.BrokerMessageLog">
    <id column="message_id" jdbcType="VARCHAR" property="messageId" />
    <result column="message" jdbcType="VARCHAR" property="message" />
    <result column="try_account" jdbcType="INTEGER" property="tryAccount" />
    <result column="status" jdbcType="VARCHAR" property="status" />
    <result column="next_retry" jdbcType="TIMESTAMP" property="nextRetry" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
  </resultMap>
  <sql id="Base_Column_List">
    message_id, message, try_account, status, next_retry, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from broker_message_log
    where message_id = #{messageId,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from broker_message_log
    where message_id = #{messageId,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="sxs.xas.bqq.hqz.yjgc.myw.entity.model.BrokerMessageLog">
    insert into broker_message_log (message_id, message, try_account, 
      status, next_retry, create_time, 
      update_time)
    values (#{messageId,jdbcType=VARCHAR}, #{message,jdbcType=VARCHAR}, #{tryAccount,jdbcType=INTEGER}, 
      #{status,jdbcType=VARCHAR}, #{nextRetry,jdbcType=TIMESTAMP}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="sxs.xas.bqq.hqz.yjgc.myw.entity.model.BrokerMessageLog">
    insert into broker_message_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        message_id,
      </if>
      <if test="message != null">
        message,
      </if>
      <if test="tryAccount != null">
        try_account,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="nextRetry != null">
        next_retry,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="messageId != null">
        #{messageId,jdbcType=VARCHAR},
      </if>
      <if test="message != null">
        #{message,jdbcType=VARCHAR},
      </if>
      <if test="tryAccount != null">
        #{tryAccount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        #{status,jdbcType=VARCHAR},
      </if>
      <if test="nextRetry != null">
        #{nextRetry,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="sxs.xas.bqq.hqz.yjgc.myw.entity.model.BrokerMessageLog">
    update broker_message_log
    <set>
      <if test="message != null">
        message = #{message,jdbcType=VARCHAR},
      </if>
      <if test="tryAccount != null">
        try_account = #{tryAccount,jdbcType=INTEGER},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=VARCHAR},
      </if>
      <if test="nextRetry != null">
        next_retry = #{nextRetry,jdbcType=TIMESTAMP},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where message_id = #{messageId,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="sxs.xas.bqq.hqz.yjgc.myw.entity.model.BrokerMessageLog">
    update broker_message_log
    set message = #{message,jdbcType=VARCHAR},
      try_account = #{tryAccount,jdbcType=INTEGER},
      status = #{status,jdbcType=VARCHAR},
      next_retry = #{nextRetry,jdbcType=TIMESTAMP},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where message_id = #{messageId,jdbcType=VARCHAR}
  </update>
</mapper>